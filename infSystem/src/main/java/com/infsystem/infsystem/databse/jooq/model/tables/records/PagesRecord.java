/**
 * This class is generated by jOOQ
 */
package com.infsystem.infsystem.databse.jooq.model.tables.records;


import com.infsystem.infsystem.databse.jooq.model.tables.Pages;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PagesRecord extends UpdatableRecordImpl<PagesRecord> implements Record4<Integer, Integer, Integer, Integer> {

    private static final long serialVersionUID = 120584829;

    /**
     * Setter for <code>inf.pages.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>inf.pages.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>inf.pages.pageNumber</code>.
     */
    public void setPagenumber(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>inf.pages.pageNumber</code>.
     */
    public Integer getPagenumber() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>inf.pages.chapterId</code>.
     */
    public void setChapterid(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>inf.pages.chapterId</code>.
     */
    public Integer getChapterid() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>inf.pages.availableQty</code>.
     */
    public void setAvailableqty(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>inf.pages.availableQty</code>.
     */
    public Integer getAvailableqty() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Pages.PAGES.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Pages.PAGES.PAGENUMBER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Pages.PAGES.CHAPTERID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Pages.PAGES.AVAILABLEQTY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getPagenumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getChapterid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getAvailableqty();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PagesRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PagesRecord value2(Integer value) {
        setPagenumber(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PagesRecord value3(Integer value) {
        setChapterid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PagesRecord value4(Integer value) {
        setAvailableqty(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PagesRecord values(Integer value1, Integer value2, Integer value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PagesRecord
     */
    public PagesRecord() {
        super(Pages.PAGES);
    }

    /**
     * Create a detached, initialised PagesRecord
     */
    public PagesRecord(Integer id, Integer pagenumber, Integer chapterid, Integer availableqty) {
        super(Pages.PAGES);

        set(0, id);
        set(1, pagenumber);
        set(2, chapterid);
        set(3, availableqty);
    }
}
