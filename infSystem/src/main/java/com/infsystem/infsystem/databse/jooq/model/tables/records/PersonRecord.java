/**
 * This class is generated by jOOQ
 */
package com.infsystem.infsystem.databse.jooq.model.tables.records;


import com.infsystem.infsystem.databse.jooq.model.tables.Person;

import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonRecord extends UpdatableRecordImpl<PersonRecord> implements Record12<Integer, Date, Integer, Date, Integer, String, String, Date, String, String, Integer, Integer> {

    private static final long serialVersionUID = 939298960;

    /**
     * Setter for <code>inf.person.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>inf.person.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>inf.person.createDate</code>.
     */
    public void setCreatedate(Date value) {
        set(1, value);
    }

    /**
     * Getter for <code>inf.person.createDate</code>.
     */
    public Date getCreatedate() {
        return (Date) get(1);
    }

    /**
     * Setter for <code>inf.person.addBy</code>.
     */
    public void setAddby(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>inf.person.addBy</code>.
     */
    public Integer getAddby() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>inf.person.modifyDate</code>.
     */
    public void setModifydate(Date value) {
        set(3, value);
    }

    /**
     * Getter for <code>inf.person.modifyDate</code>.
     */
    public Date getModifydate() {
        return (Date) get(3);
    }

    /**
     * Setter for <code>inf.person.modifyBy</code>.
     */
    public void setModifyby(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>inf.person.modifyBy</code>.
     */
    public Integer getModifyby() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>inf.person.fName</code>.
     */
    public void setFname(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>inf.person.fName</code>.
     */
    public String getFname() {
        return (String) get(5);
    }

    /**
     * Setter for <code>inf.person.lName</code>.
     */
    public void setLname(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>inf.person.lName</code>.
     */
    public String getLname() {
        return (String) get(6);
    }

    /**
     * Setter for <code>inf.person.dob</code>.
     */
    public void setDob(Date value) {
        set(7, value);
    }

    /**
     * Getter for <code>inf.person.dob</code>.
     */
    public Date getDob() {
        return (Date) get(7);
    }

    /**
     * Setter for <code>inf.person.nic</code>.
     */
    public void setNic(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>inf.person.nic</code>.
     */
    public String getNic() {
        return (String) get(8);
    }

    /**
     * Setter for <code>inf.person.email</code>.
     */
    public void setEmail(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>inf.person.email</code>.
     */
    public String getEmail() {
        return (String) get(9);
    }

    /**
     * Setter for <code>inf.person.type</code>.
     */
    public void setType(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>inf.person.type</code>.
     */
    public Integer getType() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>inf.person.status</code>.
     */
    public void setStatus(Integer value) {
        set(11, value);
    }

    /**
     * Getter for <code>inf.person.status</code>.
     */
    public Integer getStatus() {
        return (Integer) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row12<Integer, Date, Integer, Date, Integer, String, String, Date, String, String, Integer, Integer> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row12<Integer, Date, Integer, Date, Integer, String, String, Date, String, String, Integer, Integer> valuesRow() {
        return (Row12) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Person.PERSON.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field2() {
        return Person.PERSON.CREATEDATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Person.PERSON.ADDBY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field4() {
        return Person.PERSON.MODIFYDATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Person.PERSON.MODIFYBY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Person.PERSON.FNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Person.PERSON.LNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field8() {
        return Person.PERSON.DOB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return Person.PERSON.NIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return Person.PERSON.EMAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field11() {
        return Person.PERSON.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field12() {
        return Person.PERSON.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value2() {
        return getCreatedate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getAddby();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value4() {
        return getModifydate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getModifyby();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getFname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getLname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value8() {
        return getDob();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getNic();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getEmail();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value11() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value12() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonRecord value2(Date value) {
        setCreatedate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonRecord value3(Integer value) {
        setAddby(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonRecord value4(Date value) {
        setModifydate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonRecord value5(Integer value) {
        setModifyby(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonRecord value6(String value) {
        setFname(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonRecord value7(String value) {
        setLname(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonRecord value8(Date value) {
        setDob(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonRecord value9(String value) {
        setNic(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonRecord value10(String value) {
        setEmail(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonRecord value11(Integer value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonRecord value12(Integer value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonRecord values(Integer value1, Date value2, Integer value3, Date value4, Integer value5, String value6, String value7, Date value8, String value9, String value10, Integer value11, Integer value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PersonRecord
     */
    public PersonRecord() {
        super(Person.PERSON);
    }

    /**
     * Create a detached, initialised PersonRecord
     */
    public PersonRecord(Integer id, Date createdate, Integer addby, Date modifydate, Integer modifyby, String fname, String lname, Date dob, String nic, String email, Integer type, Integer status) {
        super(Person.PERSON);

        set(0, id);
        set(1, createdate);
        set(2, addby);
        set(3, modifydate);
        set(4, modifyby);
        set(5, fname);
        set(6, lname);
        set(7, dob);
        set(8, nic);
        set(9, email);
        set(10, type);
        set(11, status);
    }
}
