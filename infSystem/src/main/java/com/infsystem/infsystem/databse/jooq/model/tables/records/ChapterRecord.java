/**
 * This class is generated by jOOQ
 */
package com.infsystem.infsystem.databse.jooq.model.tables.records;


import com.infsystem.infsystem.databse.jooq.model.tables.Chapter;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChapterRecord extends UpdatableRecordImpl<ChapterRecord> implements Record5<Integer, String, Integer, Integer, Integer> {

    private static final long serialVersionUID = 1732312462;

    /**
     * Setter for <code>inf.chapter.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>inf.chapter.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>inf.chapter.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>inf.chapter.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>inf.chapter.noOfPages</code>.
     */
    public void setNoofpages(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>inf.chapter.noOfPages</code>.
     */
    public Integer getNoofpages() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>inf.chapter.bookId</code>.
     */
    public void setBookid(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>inf.chapter.bookId</code>.
     */
    public Integer getBookid() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>inf.chapter.availableQty</code>.
     */
    public void setAvailableqty(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>inf.chapter.availableQty</code>.
     */
    public Integer getAvailableqty() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, Integer, Integer, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, Integer, Integer, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Chapter.CHAPTER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Chapter.CHAPTER.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Chapter.CHAPTER.NOOFPAGES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Chapter.CHAPTER.BOOKID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Chapter.CHAPTER.AVAILABLEQTY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getNoofpages();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getBookid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getAvailableqty();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChapterRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChapterRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChapterRecord value3(Integer value) {
        setNoofpages(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChapterRecord value4(Integer value) {
        setBookid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChapterRecord value5(Integer value) {
        setAvailableqty(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChapterRecord values(Integer value1, String value2, Integer value3, Integer value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ChapterRecord
     */
    public ChapterRecord() {
        super(Chapter.CHAPTER);
    }

    /**
     * Create a detached, initialised ChapterRecord
     */
    public ChapterRecord(Integer id, String name, Integer noofpages, Integer bookid, Integer availableqty) {
        super(Chapter.CHAPTER);

        set(0, id);
        set(1, name);
        set(2, noofpages);
        set(3, bookid);
        set(4, availableqty);
    }
}
